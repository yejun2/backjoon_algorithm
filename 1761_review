N(2 ≤ N ≤ 40,000)개의 정점으로 이루어진 트리가 주어지고 M(1 ≤ M ≤ 10,000)개의 두 노드 쌍을 입력받을 때 두 노드 사이의 거리를 출력하라.

-이러한 내용의 문제이다-

우선, 시간복잡도를 확인해보면 정점에서 dfs 혹은 bfs로 두 노드 쌍의 거리를 구하려 한다면 O(NM)이 된다.

여기서 우리가 사용할 수 있는 방법은 LCA알고리즘을 이용하는것인데, 시간복잡도의 이유로 이진 LCA를 사용하여야 한다.
이진 LCA란 한 노드의 부모만 저장하는 것이 아닌, 2 ** i (i = 0, 1, 2, 3, .........., max depth) 위의 부모의 노드를 같이 저장하는것이다.

LCA와 똑같이 depth를 일치시키고 계속 찾아올라가는 알고리즘이다. max depth에서부터 거슬러 올라가면 되고, depth를 맞추는 과정 또한 동일하다.

1번 노드를 depth를 1로 잡는다.

1번노드와 연결된 노드, 그 노드들과 연결된 노드들로 계속 갱신한다.

parent[i][0]은 부모노드
parent[i][1]은 parent[parent[i][0]][0]
parent[i][2]은 parent[parent[i][1]][1]

이런식으로 이진 부모들을 저장하면 되고 거리또한 이와 같은 방법으로

cost[i][0]은 부모노드
cost[i][1]은 cost[cost[i][0]][0]
cost[i][2]은 cost[cost[i][1]][1] 이런 식으로 저장하고 search하면 된다.
