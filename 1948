// Online C++ compiler to run C++ program online
#include <bits/stdc++.h>
using namespace std;
int N, M, S, E, cnt = 0;
vector<pair<int, int>> arr[10009];
vector<pair<int, int>> back[10009];
int vec[10009] = {0};
bool chk[10009] = {false};

void search_route() {
    queue<int> q;
    q.push(E);
    
    while (!q.empty()) {
        int now = q.front();
        q.pop();
        for (int i = 0; i < back[now].size(); i++) {
            int to = back[now][i].first, c = back[now][i].second;
            if (vec[to] == vec[now] - c) {
                if (!chk[to]) {
                    q.push(to);
                }
                cnt++;
                chk[to] = true;
            }
        }
    }
}

void search_cost() {
    queue<int> q;
    q.push(S);
    
    while (!q.empty()) {
        int now = q.front();
        q.pop();
        for (int i = 0; i < arr[now].size(); i++) {
            int to = arr[now][i].first, cost = arr[now][i].second;
            if (vec[to] < vec[now] + cost) {
                vec[to] = vec[now] + cost;
                q.push(to);
            }
        }
    }
}

void input() {
    cin >> N >> M;
    for (int i = 0; i < M; i++) {
        int a, b, c;
        cin >> a >> b >> c;
        arr[a].push_back({b, c});
        back[b].push_back({a, c});
    }
    cin >> S >> E;
}

void solution() {
    input();
    search_cost();
    search_route();
    cout << vec[E] << "\n" << cnt;
}

int main() {
    ios::sync_with_stdio(false);
    cin.tie(NULL);
    cout.tie(NULL);
    solution();
    return 0;
}
