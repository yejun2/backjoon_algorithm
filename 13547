// Online C++ compiler to run C++ program online
#include <bits/stdc++.h>
using namespace std;
#define ll long long
#define endl "\n"
int arr[100001], ans[100001], cnt[1000001];
int N, T, sqrtN, a, b;
#define FASTIO ios::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
class Query {
public:
    int s, e, idx;
    Query(int s, int e, int idx) {
        this->s = s;
        this->e = e;
        this->idx = idx;
    }
    bool operator < (Query &q) {
        if (s/sqrtN == q.s/sqrtN) {
            return e < q.e;
        }
        return s/sqrtN < q.s/sqrtN;
    }
};
vector<Query> vec;

void solve() {
    sort(vec.begin(), vec.end());
    int now = 0;
    int left = vec[0].s, right = vec[0].e;
    for (int i = left; i <= right; i++) {
        int num = arr[i];
        if (!cnt[num]) now++;
        cnt[num]++;
    }
    ans[vec[0].idx] = now;
    for (int i = 1; i < T; i++) {
        a = vec[i].s; b = vec[i].e;
        for (int j = left; j < a; j++) {
            int num = arr[j];
            cnt[num]--;
            if (!cnt[num]) now--;
        }
        for (int j = a; j < left; j++) {
            int num = arr[j];
            if (!cnt[num]) now++;
            cnt[num]++;
        }
        for (int j = b; j > right; j--) {
            int num = arr[j];
            if (!cnt[num]) now++;
            cnt[num]++;
        }
        for (int j = right; j > b; j--) {
            int num = arr[j];
            cnt[num]--;
            if (!cnt[num]) now--;
        }
        left = a; right = b;
        ans[vec[i].idx] = now;
    }
    for (int i = 0; i < T; i++) {
        cout << ans[i] << endl;
    }
}

void input() {
    FASTIO
    cin >> N;
    sqrtN = sqrt(N);
    
    for (int i = 0; i < N; i++) {
        cin >> arr[i];
    }
    cin >> T;
    for (int i = 0; i < T; i++) {
        cin >> a >> b;
        Query q = Query(a-1, b-1, i);
        vec.push_back(q);
    }
}

int main() {
    input();
    solve();
    return 0;
}
