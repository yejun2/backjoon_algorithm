1 ~ N 까지의 모든 수의 0~9까지의 수의 개수를 세는 문제이다.

1의 자릿수에서 숫자가 1 증가할 떄, 그 수가 한번 반복된다.
예를 들어보자면 1 -> 2가 될떄 1이 한번 나온다.

그럼 10의 자릿수에서 보자. 10 -> 20 이 될때 10, 11, 12 ... 19, 20 이렇게 0~9까지의 1의 자릿수가 늘어남에 따라 10의 자릿수인 1이 10번 반복된다.

개념이 맞는지 확인하기 위하여 100의 자릿수로 확인해보자. 100, 101, .... , 199, 200 이 된다.
100의 자릿수인 1이 몇번 반복되는지를 확인해보자면 10의 자릿수마다 1의 자릿수에서 0~9까지 10번씩 10번 반복된다.
1은 10 * 10 = 100번 반복되어 세어진다는 사실을 알 수 있다.

자릿수가 증가될때마다 그 수가 반복되는 횟수는 10 ** (자릿수-1)라는 것을 알 수 있다.

N1 와 N2 (N1 < N2)사이에 각 수가 반복되는 횟수를 보자.

N2/10 - N1/10 + 1 만큼 10 ** (자릿수-1)회씩 반복될것이다.

그리고 작은수의 첫번째 자릿수를 0, 큰 수의 첫번째 자릿수를 9로 맞춰줘야 우리의 식이 적용된다.

작은 수는 1씩 증가, 큰 수는 1씩 감소시켜 마지막 자릿수를 0과 9로 맞춰야한다.

예를 들어보자. N이 141인 경우를 보자.

1에서 N까지의 각 수의 반복 횟수를 구해야한다.

1->10, 141-> 139로 각각 증가 감소시킨다. 이 과정에서 각 자릿수의 수의 횟수는 1씩 증가시킨다.

0~9까지 수가 10 ** 0회씩 반복되는 횟수는 (139/10 - 10/10 + 1) = 13회이다.

그 다음은 1에서 13까지 구간이다.

마찬가지로 0, 9로 맞추는 과정에서 끝난다.

이런 알고리즘으로 풀 수 있는 문제이다.
