World Soccer Championship이 다가오고 있다! 천재적인 전술을 창조하는 플랜 아티스트 감독 도현이는 자신의 팀이 승리하도록 만반의 준비를 가하고 있다. 도현이의 전략은 경기장을 여러 개의 구역으로 나누고, 어떤 선수가 A구역에서 B구역으로 이동하게 하는 움직임을 (A, B)로 표현한다. 
모든 도현이의 팀 선수들이 이 움직임만을 따라서 이동한다면 승리하리라고 도현이는 확신한다.
도현이는 선수들에게 자신의 전술을 말해주며, 다른 모든 구역에 도달할 수 있는 시작 구역을 찾은 뒤 지시한 움직임만을 따라가라고 했다. 그러나 도현이는 한 가지 간과한 것이 있었는데 그건 선수들이 자신만큼 똑똑하지 않다는 것이다. 
선수들은 그러한 시작 구역을 찾는 것이 어려웠다. 이제 당신이 적절한 시작 구역을 찾아줘야 한다.

1. 어디로든 갈 수 있는 노드의 존재 유무부터 파악하여야한다.
2. 존재한다면 어떤 노드들인지 파악하여야한다.

scc의 개념은 구성 노드는 어느 다른 구성노드로도 갈 수 있어야한다.
타잔 알고리즘에서는 구성노드가 한개더라도, 해당 노드가 간선이 존재하지 않더라도 새로운 하나의 scc로 판별한다.
1번 문제의 답은 어떻게 구할 수 있을까?
어디로든 갈 수 있는 노드가 존재하는지를 파악하려면 다른 scc에서 어떤 scc로 들어가는 간선이 있는 scc의 개수가 총 scc의 개수 - 1 개가 되어야한다.
단순 scc의 개수가 아니다. 반례를 보자.
1 -> 2, 0 -> 2, 2 -> 3 이 각 scc간의 간선이라고 보자.
각 scc간의 간선의 개수는 3 이므로, 단순 scc간의 간선의 개수로 판별하면 정답이 될 수 있다. 하지만, 0, 1번 scc에서 출발하더라도 서로의 scc로는 갈 수 없다.
자신 scc로 들어오는 간선이 있는 scc의 개수가 되어야한다. 왜냐하면 1번이 성립하려면 최소한 scc의 개수 - 1 은 다른 scc로 부터 연결되어야 있어야하기 때문이다.

2번 문제는 어떻게 구할 수 있을까.
scc로 들어오는 간선의 개수가 0일 경우 이 경우에 속한다. 방향성이 있는 간선으로 연결되어있을때, 들어오는 것이 없다는 뜻은 다른 모든 노드로 갈 수 있다는 뜻이다.

코드의 흐름

1. dfs를 통해 scc를 구한다. 그리고 sid (sccID)를 각 scc마다 저장해놓는다.
2. sccIn에 각 sccID로 들어가는 간선의 개수를 저장한다. 노드간의 간선을 보며 출발점과 도착점의 sccID가 다르다면 도착점의 sccID로 들어가는 간선이 한개 추가된다.
3. 1번을 판별하기 위한 과정으로, 각 sccID마다 들어오는 간선이 존재하는 scc의 개수를 카운트한다.
4. 존재한다면 sccIn의 값이 0인 sccID값을 가진 노드들을 출력한다. 반복문을 돌리면 작은 수부터 출력되므로 오름차순은 신경쓰지 않아도 된다.

상당히 중요한 문제이다. scc의 개념을 잘 생각해 개념을 수학적으로 성립하는지 확인해나가며 풀어야하는 이유를 잘 보여주는 문제이다.
