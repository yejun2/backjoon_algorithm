// Online C++ compiler to run C++ program online
#include <bits/stdc++.h>
#define INF 987654321
using namespace std;
int N, M;
vector<vector<int>> low, high;

void input() {
    ios::sync_with_stdio(false);
    cin.tie(NULL); cout.tie(NULL);
    
    cin >> N >> M;
    
    int a, b, c;
    low = vector<vector<int>>(N, vector<int>(N, INF));
    high = vector<vector<int>>(N, vector<int>(N, 0));
    for (int i = 0; i < M; i++) {
        cin >> a >> b >> c;
        a--; b--;
        low[a][b] = min(low[a][b], c);
        low[b][a] = min(low[b][a], c);
        
        high[a][b] = max(high[a][b], c);
        high[b][a] = max(high[b][a], c);
    }
    
    for (int i = 0; i < N; i++) {
        low[i][i] = 0;
    }
}
 
void floyd() {
    for (int i = 0; i < N; i++) {
        for (int j = 0; j < N; j++) {
            for (int k = 0; k < N; k++) {
                low[j][k] = min(low[j][k], low[j][i] + low[i][k]);
            }
        }
    }
}

void solution() {
    double ans = INF;
    for (int i = 0; i < N; i++) {
        double maxdist = 0;
        for (int j = 0; j < N; j++) {
            for (int k = 0; k < N; k++) {
                maxdist = max(maxdist, double(low[i][k]));
                double remain = high[j][k] - (low[i][k] - low[i][j]);
                if (remain > 0) {
                    double tmp = remain / 2;
                    tmp += low[i][k];
                    maxdist = max(maxdist, tmp);
                }
            }
        }
        ans = min(ans, maxdist);
    }
    printf("%.1f\n", ans);
}

int main() {
    input();
    floyd();
    solution();
    return 0;
}
